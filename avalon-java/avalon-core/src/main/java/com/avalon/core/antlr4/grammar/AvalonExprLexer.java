/**
 * @author lwlianghehe@gmail.com
 * @date 2024/11/22
 */

package com.avalon.core.antlr4.grammar;// Generated from AvalonExpr.g4 by ANTLR 4.12.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class AvalonExprLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.12.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		ID=10, NEWLINE=11, SEMI=12, NUMBER=13, INT=14, STRING=15, WS=16, LINE_COMMENT=17, 
		COMMENT=18, MUL=19, DIV=20, ADD=21, SUB=22, TRUE=23, FALSE=24, NOT=25, 
		GT=26, GE=27, LT=28, LE=29, EQ=30, NEQ=31, LPAREN=32, RPAREN=33, LBrace=34, 
		RBrace=35;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"ID", "NEWLINE", "SEMI", "NUMBER", "INT", "EXP", "STRING", "ESC", "UNICODE", 
			"HEX", "WS", "LINE_COMMENT", "COMMENT", "MUL", "DIV", "ADD", "SUB", "TRUE", 
			"FALSE", "NOT", "GT", "GE", "LT", "LE", "EQ", "NEQ", "LPAREN", "RPAREN", 
			"LBrace", "RBrace"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "'if'", "'else'", "'for'", "'while'", "'?'", "':'", "'.'", 
			"','", null, null, "';'", null, null, null, null, null, null, "'*'", 
			"'/'", "'+'", "'-'", "'true'", "'false'", "'!'", "'>'", "'>='", "'<'", 
			"'<='", "'=='", "'!='", "'('", "')'", "'{'", "'}'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, "ID", "NEWLINE", 
			"SEMI", "NUMBER", "INT", "STRING", "WS", "LINE_COMMENT", "COMMENT", "MUL", 
			"DIV", "ADD", "SUB", "TRUE", "FALSE", "NOT", "GT", "GE", "LT", "LE", 
			"EQ", "NEQ", "LPAREN", "RPAREN", "LBrace", "RBrace"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public AvalonExprLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AvalonExpr.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000#\u00f9\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0004\tm\b\t\u000b\t"+
		"\f\tn\u0001\n\u0003\nr\b\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0003\f|\b\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0003\f\u0082\b\f\u0001\r\u0001\r\u0001\r\u0005\r\u0087\b\r\n\r\f\r"+
		"\u008a\t\r\u0003\r\u008c\b\r\u0001\u000e\u0001\u000e\u0003\u000e\u0090"+
		"\b\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0005"+
		"\u000f\u0097\b\u000f\n\u000f\f\u000f\u009a\t\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0003\u0010\u00a1\b\u0010\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012"+
		"\u0001\u0012\u0001\u0013\u0004\u0013\u00ac\b\u0013\u000b\u0013\f\u0013"+
		"\u00ad\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0005\u0014\u00b6\b\u0014\n\u0014\f\u0014\u00b9\t\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015"+
		"\u0001\u0015\u0005\u0015\u00c3\b\u0015\n\u0015\f\u0015\u00c6\t\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001"+
		"\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001"+
		"\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001"+
		"\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001"+
		"\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 \u0001!\u0001!\u0001"+
		"!\u0001\"\u0001\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001%\u0001%\u0001"+
		"&\u0001&\u0002\u00b7\u00c4\u0000\'\u0001\u0001\u0003\u0002\u0005\u0003"+
		"\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015"+
		"\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u0000\u001f\u000f!\u0000#\u0000"+
		"%\u0000\'\u0010)\u0011+\u0012-\u0013/\u00141\u00153\u00165\u00177\u0018"+
		"9\u0019;\u001a=\u001b?\u001cA\u001dC\u001eE\u001fG I!K\"M#\u0001\u0000"+
		"\t\u0002\u0000AZaz\u0001\u000019\u0001\u000009\u0002\u0000EEee\u0002\u0000"+
		"++--\u0002\u0000\"\"\\\\\b\u0000\"\"//\\\\bbffnnrrtt\u0003\u000009AFa"+
		"f\u0002\u0000\t\t  \u0102\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003"+
		"\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007"+
		"\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001"+
		"\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000"+
		"\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000"+
		"\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000"+
		"\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000"+
		"\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000"+
		"-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001"+
		"\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000"+
		"\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000"+
		";\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001"+
		"\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000"+
		"\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000"+
		"I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001"+
		"\u0000\u0000\u0000\u0001O\u0001\u0000\u0000\u0000\u0003Q\u0001\u0000\u0000"+
		"\u0000\u0005T\u0001\u0000\u0000\u0000\u0007Y\u0001\u0000\u0000\u0000\t"+
		"]\u0001\u0000\u0000\u0000\u000bc\u0001\u0000\u0000\u0000\re\u0001\u0000"+
		"\u0000\u0000\u000fg\u0001\u0000\u0000\u0000\u0011i\u0001\u0000\u0000\u0000"+
		"\u0013l\u0001\u0000\u0000\u0000\u0015q\u0001\u0000\u0000\u0000\u0017u"+
		"\u0001\u0000\u0000\u0000\u0019\u0081\u0001\u0000\u0000\u0000\u001b\u008b"+
		"\u0001\u0000\u0000\u0000\u001d\u008d\u0001\u0000\u0000\u0000\u001f\u0093"+
		"\u0001\u0000\u0000\u0000!\u009d\u0001\u0000\u0000\u0000#\u00a2\u0001\u0000"+
		"\u0000\u0000%\u00a8\u0001\u0000\u0000\u0000\'\u00ab\u0001\u0000\u0000"+
		"\u0000)\u00b1\u0001\u0000\u0000\u0000+\u00be\u0001\u0000\u0000\u0000-"+
		"\u00cc\u0001\u0000\u0000\u0000/\u00ce\u0001\u0000\u0000\u00001\u00d0\u0001"+
		"\u0000\u0000\u00003\u00d2\u0001\u0000\u0000\u00005\u00d4\u0001\u0000\u0000"+
		"\u00007\u00d9\u0001\u0000\u0000\u00009\u00df\u0001\u0000\u0000\u0000;"+
		"\u00e1\u0001\u0000\u0000\u0000=\u00e3\u0001\u0000\u0000\u0000?\u00e6\u0001"+
		"\u0000\u0000\u0000A\u00e8\u0001\u0000\u0000\u0000C\u00eb\u0001\u0000\u0000"+
		"\u0000E\u00ee\u0001\u0000\u0000\u0000G\u00f1\u0001\u0000\u0000\u0000I"+
		"\u00f3\u0001\u0000\u0000\u0000K\u00f5\u0001\u0000\u0000\u0000M\u00f7\u0001"+
		"\u0000\u0000\u0000OP\u0005=\u0000\u0000P\u0002\u0001\u0000\u0000\u0000"+
		"QR\u0005i\u0000\u0000RS\u0005f\u0000\u0000S\u0004\u0001\u0000\u0000\u0000"+
		"TU\u0005e\u0000\u0000UV\u0005l\u0000\u0000VW\u0005s\u0000\u0000WX\u0005"+
		"e\u0000\u0000X\u0006\u0001\u0000\u0000\u0000YZ\u0005f\u0000\u0000Z[\u0005"+
		"o\u0000\u0000[\\\u0005r\u0000\u0000\\\b\u0001\u0000\u0000\u0000]^\u0005"+
		"w\u0000\u0000^_\u0005h\u0000\u0000_`\u0005i\u0000\u0000`a\u0005l\u0000"+
		"\u0000ab\u0005e\u0000\u0000b\n\u0001\u0000\u0000\u0000cd\u0005?\u0000"+
		"\u0000d\f\u0001\u0000\u0000\u0000ef\u0005:\u0000\u0000f\u000e\u0001\u0000"+
		"\u0000\u0000gh\u0005.\u0000\u0000h\u0010\u0001\u0000\u0000\u0000ij\u0005"+
		",\u0000\u0000j\u0012\u0001\u0000\u0000\u0000km\u0007\u0000\u0000\u0000"+
		"lk\u0001\u0000\u0000\u0000mn\u0001\u0000\u0000\u0000nl\u0001\u0000\u0000"+
		"\u0000no\u0001\u0000\u0000\u0000o\u0014\u0001\u0000\u0000\u0000pr\u0005"+
		"\r\u0000\u0000qp\u0001\u0000\u0000\u0000qr\u0001\u0000\u0000\u0000rs\u0001"+
		"\u0000\u0000\u0000st\u0005\n\u0000\u0000t\u0016\u0001\u0000\u0000\u0000"+
		"uv\u0005;\u0000\u0000v\u0018\u0001\u0000\u0000\u0000wx\u0003\u001b\r\u0000"+
		"xy\u0005.\u0000\u0000y{\u0003\u001b\r\u0000z|\u0003\u001d\u000e\u0000"+
		"{z\u0001\u0000\u0000\u0000{|\u0001\u0000\u0000\u0000|\u0082\u0001\u0000"+
		"\u0000\u0000}~\u0003\u001b\r\u0000~\u007f\u0003\u001d\u000e\u0000\u007f"+
		"\u0082\u0001\u0000\u0000\u0000\u0080\u0082\u0003\u001b\r\u0000\u0081w"+
		"\u0001\u0000\u0000\u0000\u0081}\u0001\u0000\u0000\u0000\u0081\u0080\u0001"+
		"\u0000\u0000\u0000\u0082\u001a\u0001\u0000\u0000\u0000\u0083\u008c\u0005"+
		"0\u0000\u0000\u0084\u0088\u0007\u0001\u0000\u0000\u0085\u0087\u0007\u0002"+
		"\u0000\u0000\u0086\u0085\u0001\u0000\u0000\u0000\u0087\u008a\u0001\u0000"+
		"\u0000\u0000\u0088\u0086\u0001\u0000\u0000\u0000\u0088\u0089\u0001\u0000"+
		"\u0000\u0000\u0089\u008c\u0001\u0000\u0000\u0000\u008a\u0088\u0001\u0000"+
		"\u0000\u0000\u008b\u0083\u0001\u0000\u0000\u0000\u008b\u0084\u0001\u0000"+
		"\u0000\u0000\u008c\u001c\u0001\u0000\u0000\u0000\u008d\u008f\u0007\u0003"+
		"\u0000\u0000\u008e\u0090\u0007\u0004\u0000\u0000\u008f\u008e\u0001\u0000"+
		"\u0000\u0000\u008f\u0090\u0001\u0000\u0000\u0000\u0090\u0091\u0001\u0000"+
		"\u0000\u0000\u0091\u0092\u0003\u001b\r\u0000\u0092\u001e\u0001\u0000\u0000"+
		"\u0000\u0093\u0098\u0005\"\u0000\u0000\u0094\u0097\u0003!\u0010\u0000"+
		"\u0095\u0097\b\u0005\u0000\u0000\u0096\u0094\u0001\u0000\u0000\u0000\u0096"+
		"\u0095\u0001\u0000\u0000\u0000\u0097\u009a\u0001\u0000\u0000\u0000\u0098"+
		"\u0096\u0001\u0000\u0000\u0000\u0098\u0099\u0001\u0000\u0000\u0000\u0099"+
		"\u009b\u0001\u0000\u0000\u0000\u009a\u0098\u0001\u0000\u0000\u0000\u009b"+
		"\u009c\u0005\"\u0000\u0000\u009c \u0001\u0000\u0000\u0000\u009d\u00a0"+
		"\u0005\\\u0000\u0000\u009e\u00a1\u0007\u0006\u0000\u0000\u009f\u00a1\u0003"+
		"#\u0011\u0000\u00a0\u009e\u0001\u0000\u0000\u0000\u00a0\u009f\u0001\u0000"+
		"\u0000\u0000\u00a1\"\u0001\u0000\u0000\u0000\u00a2\u00a3\u0005u\u0000"+
		"\u0000\u00a3\u00a4\u0003%\u0012\u0000\u00a4\u00a5\u0003%\u0012\u0000\u00a5"+
		"\u00a6\u0003%\u0012\u0000\u00a6\u00a7\u0003%\u0012\u0000\u00a7$\u0001"+
		"\u0000\u0000\u0000\u00a8\u00a9\u0007\u0007\u0000\u0000\u00a9&\u0001\u0000"+
		"\u0000\u0000\u00aa\u00ac\u0007\b\u0000\u0000\u00ab\u00aa\u0001\u0000\u0000"+
		"\u0000\u00ac\u00ad\u0001\u0000\u0000\u0000\u00ad\u00ab\u0001\u0000\u0000"+
		"\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000\u00ae\u00af\u0001\u0000\u0000"+
		"\u0000\u00af\u00b0\u0006\u0013\u0000\u0000\u00b0(\u0001\u0000\u0000\u0000"+
		"\u00b1\u00b2\u0005/\u0000\u0000\u00b2\u00b3\u0005/\u0000\u0000\u00b3\u00b7"+
		"\u0001\u0000\u0000\u0000\u00b4\u00b6\t\u0000\u0000\u0000\u00b5\u00b4\u0001"+
		"\u0000\u0000\u0000\u00b6\u00b9\u0001\u0000\u0000\u0000\u00b7\u00b8\u0001"+
		"\u0000\u0000\u0000\u00b7\u00b5\u0001\u0000\u0000\u0000\u00b8\u00ba\u0001"+
		"\u0000\u0000\u0000\u00b9\u00b7\u0001\u0000\u0000\u0000\u00ba\u00bb\u0005"+
		"\n\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bc\u00bd\u0006\u0014"+
		"\u0000\u0000\u00bd*\u0001\u0000\u0000\u0000\u00be\u00bf\u0005/\u0000\u0000"+
		"\u00bf\u00c0\u0005*\u0000\u0000\u00c0\u00c4\u0001\u0000\u0000\u0000\u00c1"+
		"\u00c3\t\u0000\u0000\u0000\u00c2\u00c1\u0001\u0000\u0000\u0000\u00c3\u00c6"+
		"\u0001\u0000\u0000\u0000\u00c4\u00c5\u0001\u0000\u0000\u0000\u00c4\u00c2"+
		"\u0001\u0000\u0000\u0000\u00c5\u00c7\u0001\u0000\u0000\u0000\u00c6\u00c4"+
		"\u0001\u0000\u0000\u0000\u00c7\u00c8\u0005*\u0000\u0000\u00c8\u00c9\u0005"+
		"/\u0000\u0000\u00c9\u00ca\u0001\u0000\u0000\u0000\u00ca\u00cb\u0006\u0015"+
		"\u0000\u0000\u00cb,\u0001\u0000\u0000\u0000\u00cc\u00cd\u0005*\u0000\u0000"+
		"\u00cd.\u0001\u0000\u0000\u0000\u00ce\u00cf\u0005/\u0000\u0000\u00cf0"+
		"\u0001\u0000\u0000\u0000\u00d0\u00d1\u0005+\u0000\u0000\u00d12\u0001\u0000"+
		"\u0000\u0000\u00d2\u00d3\u0005-\u0000\u0000\u00d34\u0001\u0000\u0000\u0000"+
		"\u00d4\u00d5\u0005t\u0000\u0000\u00d5\u00d6\u0005r\u0000\u0000\u00d6\u00d7"+
		"\u0005u\u0000\u0000\u00d7\u00d8\u0005e\u0000\u0000\u00d86\u0001\u0000"+
		"\u0000\u0000\u00d9\u00da\u0005f\u0000\u0000\u00da\u00db\u0005a\u0000\u0000"+
		"\u00db\u00dc\u0005l\u0000\u0000\u00dc\u00dd\u0005s\u0000\u0000\u00dd\u00de"+
		"\u0005e\u0000\u0000\u00de8\u0001\u0000\u0000\u0000\u00df\u00e0\u0005!"+
		"\u0000\u0000\u00e0:\u0001\u0000\u0000\u0000\u00e1\u00e2\u0005>\u0000\u0000"+
		"\u00e2<\u0001\u0000\u0000\u0000\u00e3\u00e4\u0005>\u0000\u0000\u00e4\u00e5"+
		"\u0005=\u0000\u0000\u00e5>\u0001\u0000\u0000\u0000\u00e6\u00e7\u0005<"+
		"\u0000\u0000\u00e7@\u0001\u0000\u0000\u0000\u00e8\u00e9\u0005<\u0000\u0000"+
		"\u00e9\u00ea\u0005=\u0000\u0000\u00eaB\u0001\u0000\u0000\u0000\u00eb\u00ec"+
		"\u0005=\u0000\u0000\u00ec\u00ed\u0005=\u0000\u0000\u00edD\u0001\u0000"+
		"\u0000\u0000\u00ee\u00ef\u0005!\u0000\u0000\u00ef\u00f0\u0005=\u0000\u0000"+
		"\u00f0F\u0001\u0000\u0000\u0000\u00f1\u00f2\u0005(\u0000\u0000\u00f2H"+
		"\u0001\u0000\u0000\u0000\u00f3\u00f4\u0005)\u0000\u0000\u00f4J\u0001\u0000"+
		"\u0000\u0000\u00f5\u00f6\u0005{\u0000\u0000\u00f6L\u0001\u0000\u0000\u0000"+
		"\u00f7\u00f8\u0005}\u0000\u0000\u00f8N\u0001\u0000\u0000\u0000\u000e\u0000"+
		"nq{\u0081\u0088\u008b\u008f\u0096\u0098\u00a0\u00ad\u00b7\u00c4\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}